{{ $policyName := "policy-remove-infra-nodes" }} 
{{ $configPolicyName := "remove-infra-nodes" }}
{{ $placementName := printf "placement-%s" $policyName }}
{{ $labelPrefix := .Values.infraNodes.labelPrefix}}
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: {{ $policyName }}
  namespace: open-cluster-policies
  annotations:
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  disabled: false
  remediationAction: enforce
  dependencies: 
  {{- range .Values.infraNodes.dependencies.remove }}
  - apiVersion: policy.open-cluster-management.io/v1
    compliance: Compliant
    kind: Policy
    name: {{ . }}
    namespace: open-cluster-policies
  {{- end }}
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: {{ $configPolicyName }}
        spec:
          object-templates-raw: |
              {{ "{{-" }} /* Specify the parameters needed to create the MachineSet  */ {{ "-}}" }}
              {{ "{{-" }} $machineset_role := "infra" {{ "}}" }}
              {{ "{{-" }} $zones := list{{ range (toStrings .Values.infraNodes.zones) }} "{{ . }}"{{ end }} {{ "}}" }}
              {{ "{{-" }} $infrastructure_id := (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").status.infrastructureName {{ "}}" }}
              {{ "{{-" }} $worker_ms := (index (lookup "machine.openshift.io/v1beta1" "MachineSet" "openshift-machine-api" "").items 0) {{ "}}" }}
              {{ "{{-" }} /* Generate the MachineSet for each zone as specified  */ {{ "-}}" }}
              {{ "{{-" }} range $zone := $zones {{ "}}" }}
              - complianceType: mustnothave
                objectDefinition:
                  apiVersion: machine.openshift.io/v1beta1
                  kind: MachineSet
                  metadata:
                    labels:
                      machine.openshift.io/cluster-api-cluster: {{ "{{" }} $infrastructure_id {{ "}}" }}
                    name: {{ "{{" }} $infrastructure_id {{ "}}" }}-{{ "{{" }} $machineset_role {{ "}}" }}-{{ "{{" }} $zone {{ "}}" }}
                    namespace: openshift-machine-api
#                  spec:
#                    deletePolicy: Oldest
#                    replicas: {{ "{{" }} fromClusterClaim "infra-nodes" {{ "}}" }}
#                    selector:
#                      matchLabels:
#                        machine.openshift.io/cluster-api-cluster: {{ "{{" }} $infrastructure_id {{ "}}" }}
#                        machine.openshift.io/cluster-api-machineset: {{ "{{" }} $infrastructure_id {{ "}}" }}-{{ "{{" }} $machineset_role {{ "}}" }}-{{ "{{" }} $zone {{ "}}" }}
#                    template:
#                      metadata:
#                        labels:
#                          machine.openshift.io/cluster-api-cluster: {{ "{{" }} $infrastructure_id {{ "}}" }}
#                          machine.openshift.io/cluster-api-machine-role: {{ "{{" }} $machineset_role {{ "}}" }}
#                          machine.openshift.io/cluster-api-machine-type: {{ "{{" }} $machineset_role {{ "}}" }}
#                          machine.openshift.io/cluster-api-machineset: {{ "{{" }} $infrastructure_id {{ "}}" }}-{{ "{{" }} $machineset_role {{ "}}" }}-{{ "{{" }} $zone {{ "}}" }}
#                      spec:
#                        metadata:
#                          labels:
#                            node-role.kubernetes.io/{{ "{{" }} $machineset_role {{ "}}" }}: ""
#                        taints:
#                          - key: node-role.kubernetes.io/{{ "{{" }} $machineset_role {{ "}}" }}
#                            effect: NoSchedule
#                        providerSpec:
#                        {{ "{{-" }} if eq $worker_ms.spec.template.spec.providerSpec.value.kind "VSphereMachineProviderSpec" {{ "}}" }}
#                          value:
#                            numCoresPerSocket: {{ "{{" }} fromClusterClaim "infra-nodes-numcores-per-socket" | default $worker_ms.spec.template.spec.providerSpec.value.numCoresPerSocket {{ "}}" }}
#                            diskGiB: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.diskGiB {{ "}}" }}
#                            snapshot: ''
#                            userDataSecret:
#                              name: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.userDataSecret.name {{ "}}" }}
#                            memoryMiB: {{ "{{" }} fromClusterClaim "infra-nodes-memory-mib" | default $worker_ms.spec.template.spec.providerSpec.value.memoryMiB {{ "}}" }}
#                            credentialsSecret:
#                              name: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.credentialsSecret.name {{ "}}" }}
#                            network:
#                              devices:
#                                - networkName: {{ "{{" }} (index ($worker_ms.spec.template.spec.providerSpec.value.network.devices) 0).networkName {{ "}}" }}
#                            numCPUs: {{ "{{" }} fromClusterClaim "infra-nodes-numcpu" | default $worker_ms.spec.template.spec.providerSpec.value.numCPUs {{ "}}" }}
#                            kind: VSphereMachineProviderSpec
#                            workspace:
#                              datacenter: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.workspace.datacenter {{ "}}" }}
#                              datastore:  {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.workspace.datastore {{ "}}" }}
#                              folder:  {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.workspace.folder {{ "}}" }}
#                              resourcePool: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.workspace.resourcePool {{ "}}" }}
#                              server: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.workspace.server {{ "}}" }}
#                            template: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.template {{ "}}" }}
#                            apiVersion: machine.openshift.io/v1beta1
#                        {{ "{{-" }} else if eq $worker_ms.spec.template.spec.providerSpec.value.kind "AWSMachineProviderConfig" {{ "}}" }}
#                          value:
#                            userDataSecret:
#                              name: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.userDataSecret.name {{ "}}" }}
#                            placement:
#                              availabilityZone: {{ "{{" }} $zone {{ "}}" }}
#                              region: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.placement.region {{ "}}" }}
#                            credentialsSecret:
#                              name: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.credentialsSecret.name {{ "}}" }}
#                            instanceType: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.instanceType {{ "}}" }}
#                            {{ "{{-" }} $ebs := (index ($worker_ms.spec.template.spec.providerSpec.value.blockDevices) 0).ebs {{ "}}" }}
#                            blockDevices:
#                              - ebs:
#                                  encrypted: {{ "{{" }} $ebs.encrypted {{ "}}" }}
#                                  iops: {{ "{{" }} $ebs.iops {{ "}}" }}
#                                  {{ "{{-" }} if $ebs.kmsKey.arn {{ "}}" }}
#                                  kmsKey:
#                                    arn: {{ "{{" }} $ebs.kmsKey.arn {{ "}}" }}
#                                  {{ "{{-" }} end {{ "}}" }}
#                                  volumeType: {{ "{{" }} $ebs.volumeType {{ "}}" }}
#                            securityGroups:
#                              - filters:
#                                  - name: 'tag:Name'
#                                    values:
#                                      - {{ "{{" }} (index (index (index ($worker_ms.spec.template.spec.providerSpec.value.securityGroups) 0).filters 0).values 0) {{ "}}" }}
#                            kind: AWSMachineProviderConfig
#                            tags:
#                              {{ "{{-" }} range $tag := $worker_ms.spec.template.spec.providerSpec.value.tags {{ "}}" }}
#                              - name: {{ "{{" }} $tag.name {{ "}}" }}
#                                value: {{ "{{" }} $tag.value {{ "}}" }}
#                              {{ "{{-" }} end {{ "}}" }}
#                            deviceIndex: 0
#                            ami:
#                              id: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.ami.id {{ "}}" }}
#                            subnet:
#                              filters:
#                                - name: 'tag:Name'
#                                  values:
#                                    - {{ "{{" }} $infrastructure_id {{ "}}" }}-private-{{ "{{" }} $zone {{ "}}" }}
#                            apiVersion: machine.openshift.io/v1beta1
#                            iamInstanceProfile:
#                              id: {{ "{{" }} $worker_ms.spec.template.spec.providerSpec.value.iamInstanceProfile.id {{ "}}" }}
#                        {{ "{{-" }} end {{ "}}" }}
#              {{ "{{-" }} end {{ "}}" }}
          pruneObjectBehavior: {{ .Values.infraNodes.pruneObjectBehavior | default "DeleteAll" }}
          remediationAction: {{ .Values.infraNodes.remediationAction | default "enforce" }}
          severity: high
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-cluster-infra-remove-nodes
        spec:
          remediationAction: inform
          severity: high
          object-templates-raw: |
              {{ "{{-" }} /* Specify the parameters needed to create the MachineSet  */ {{ "-}}" }}
              {{ "{{-" }} $machineset_role := "infra" {{ "}}" }}
              {{ "{{-" }} $zones := list{{ range (toStrings .Values.infraNodes.zones) }} "{{ . }}"{{ end }} {{ "}}" }}
              {{ "{{-" }} $infrastructure_id := (lookup "config.openshift.io/v1" "Infrastructure" "" "cluster").status.infrastructureName {{ "}}" }}
              {{ "{{-" }} /* Generate the MachineSet for each zone as specified  */ {{ "-}}" }}
              {{ "{{-" }} range $zone := $zones {{ "}}" }}
              - complianceType: mustnothave
                objectDefinition:
                  apiVersion: machine.openshift.io/v1beta1
                  kind: MachineSet
                  metadata:
                    labels:
                      machine.openshift.io/cluster-api-cluster: {{ "{{" }} $infrastructure_id {{ "}}" }}
                    name: {{ "{{" }} $infrastructure_id {{ "}}" }}-{{ "{{" }} $machineset_role {{ "}}" }}-{{ "{{" }} $zone {{ "}}" }}
                    namespace: openshift-machine-api
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: {{ $placementName }}
  namespace: open-cluster-policies
spec:
  clusterSets:
  {{- range .Values.infraNodes.clusterSets }}
    - {{ . }}
  {{- end }}
  predicates:
    - requiredClusterSelector:
        labelSelector:
          matchExpressions:
            - key: {{ printf $labelPrefix "infra-nodes" }}
              operator: DoesNotExist
  tolerations:
    - key: cluster.open-cluster-management.io/unreachable
      operator: Exists
    - key: cluster.open-cluster-management.io/unavailable
      operator: Exists
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: {{ $placementName }}
  namespace: open-cluster-policies
placementRef:
  name: {{ $placementName }}
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
subjects:
  - name: {{ $policyName }}
    apiGroup: policy.open-cluster-management.io
    kind: Policy
