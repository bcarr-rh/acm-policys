{{ if (.Values.debug | default false) }}
{{ range $clusterSetKey, $clusterSetValue := $.Values.hubClusterSets }}
{{ $hubClusterSet := $.Values.hubClusterSet | default "hub" }}
{{ $policyName := printf "policy-%s-cluster-labels-debug" $clusterSetKey }}
{{ $configPolicyName := printf "cluster-labels-%s-debug" $clusterSetKey }}
{{ $placementName := printf "placement-%s" $policyName }}
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: {{ $policyName }}
  namespace: open-cluster-policies
  annotations:
    policy.open-cluster-management.io/categories: CM Configuration Management
    policy.open-cluster-management.io/controls: CM-2 Baseline Configuration
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  disabled: false
  remediationAction: enforce
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: {{ $configPolicyName }}
        spec:
          object-templates:
            - complianceType: mustonlyhave 
              objectDefinition: 
                apiVersion: v1 
                kind: ConfigMap
                metadata:
                  name: cluster-set-{{ $clusterSetKey }}-lookup-debug
                  namespace: open-cluster-policies
                data:
                  lookupResult: |
                    {{ "{{" }} index ((lookup "cluster.open-cluster-management.io/v1" "ManagedCluster" "beepboop" "thisdoesnotexist") | default dict) "test" | default dict {{ "}}" }}
---
{{/* (index ((index (lookup "v1" "ConfigMap" "open-cluster-policies" (printf "cluster-set.%s"  $clusterSet)) "data" "values") | fromJson) "labels") | default dict */}}
                    {{/*{{ "{{-" }} (lookup "cluster.open-cluster-management.io/v1" "ManagedCluster" "" "") | toRawJson {{ "}}" }} */}}
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: {{ $placementName }}
  namespace: open-cluster-policies
spec:
  clusterSets:
  {{ range $cluster, $value := $.Values.hubClusterSets }}
    - {{ $cluster }}
  {{ end }}
  tolerations:
    - key: cluster.open-cluster-management.io/unreachable
      operator: Exists
    - key: cluster.open-cluster-management.io/unavailable
      operator: Exists
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: {{ $placementName}}
  namespace: open-cluster-policies
placementRef:
  name: {{ $placementName}}
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
subjects:
  - name: {{ $policyName }}
    apiGroup: policy.open-cluster-management.io
    kind: Policy
---
{{ end }}
{{ end }}
{{/*                  lookupManagedClusters: |
                    {{ "{{" }}  (lookup "cluster.open-cluster-management.io/v1" "ManagedCluster" "" "") | toRawJson {{ "}}" }}
                  lookupClusterSets: | 
                {{ "{{" }} range $index, $value := (lookup "cluster.open-cluster-management.io/v1" "ManagedCluster" "" "").items {{ "}}" }}
                    iteration: {{ "{{" }} $index {{ "}}" }}
                  {{ "{{" }} $clusterSet := ((index $value.metadata.labels "cluster.open-cluster-management.io/clusterset") | default "") {{ "}}" }}
                    {{ "{{" }} printf "cluster-set.%s" $clusterSet {{ "}}" }}
                  lookupClusterSetLabels: |
                  {{ "{{/*" }} $clusterSetLabels := ((lookup "v1" "ConfigMap" "open-cluster-policies" (printf "cluster-set.%s"  $clusterSet).data.values) | default "" | fromJson).labels | default dict {{ "}}" }}
                    {{ "{{" }} $clusterSetLabels := (index ((index (lookup "v1" "ConfigMap" "open-cluster-policies" (printf "cluster-set.%s"  $clusterSet)) "data" "values") | default "" | fromJson) "labels") | default dict {{ "}}" }}
                    {{ "{{" }} $clusterSetLabels {{ "}}" }}
                    {{ "{{/*" }} $clusterSet | trim {{ "}}" }}Labels: {{ "{{" }} $clusterSet | trim {{ "}}" }}
                  lookupClusterLabels: |
                    Cluster: {{ "{{" }}  $value.metadata.name {{ "}}" }}
                    {{ "{{" }} $clusterLabels := (index ((index (lookup "v1" "ConfigMap" "open-cluster-policies" (printf "managed-cluster.%s"  $value.metadata.name)) "data" "values") | default "" | fromJson) "labels") | default dict {{ "}}" }}
                    {{ "{{" }} $clusterLabels {{ "}}" }}
                  resultantSetOfLabels: | 
                    {{ "{{" }} $resultantLabels := merge $clusterLabels $clusterSetLabels {{ "}}" }}
                    {{ "{{" }} $resultantLabels {{ "}}" }}
                  formattedLabels: |
                  {{ "{{" }} range $label, $value := $resultantLabels {{ "}}" }}
                    {{ "{{" }} $label {{ "}}" }}: {{ "{{" }} $value | quote {{ "-}}" }} 
                  {{ "{{" }} end {{ "}}" }}
                {{ "{{" }} end {{ "}}" }}
*/}}
{{/*                  ClusterDefinition: | 
                              [
                                {{ "{{-" }} $clusters := (lookup "cluster.open-cluster-management.io/v1" "ManagedCluster" "" "").items {{ "}}" }}
                                {{ "{{-" }} $lastIndex := sub (len $clusters) 1 {{ "}}" }}
                                {{ "{{-" }} range $index, $value := $clusters {{ "}}" }}
                                  {{ "{{-" }} $newLabels := dict {{ "}}" }}
                                  {{ "{{-" }} $managedCluster := $value.metadata.name {{ "}}" }}
                                  {{ "{{-" }} $existingClusterLabels := $value.metadata.labels {{ "}}" }}
                                  {{ "{{-" }} range $existingKey, $existingValue := $existingClusterLabels {{ "}}" }}
                                    {{ "{{-" }} if ($existingKey | hasPrefix "{{ $.Values.autoshiftLabelPrefix }}") {{ "}}" }}
                                      {{ "{{-" }} $_ := unset $existingClusterLabels $existingKey {{ "}}" }}
                                    {{ "{{-" }} end {{ "}}" }}
                                  {{ "{{-" }} end {{ "}}" }}
                                  {{ "{{-" }} $clusterSet := ((index $value.metadata.labels "cluster.open-cluster-management.io/clusterset") | default "") {{ "}}" }}
                                  {{ "{{-" }} $clusterSetLabels := (index ((index (lookup "v1" "ConfigMap" "open-cluster-policies" (printf "cluster-set.%s"  $clusterSet)) "data" "values") | default "" | fromJson) "labels") | default dict {{ "}}" }}
                                  {{ "{{-" }} $clusterLabels := (index ((index (lookup "v1" "ConfigMap" "open-cluster-policies" (printf "managed-cluster.%s"  $value.metadata.name)) "data" "values") | default "" | fromJson) "labels") | default dict {{ "}}" }}
                                  {{ "{{-" }} $configMapLabels := merge $clusterLabels $clusterSetLabels {{ "}}" }}
                                  {{ "{{-" }} $labels := merge $clusterLabels $clusterSetLabels $existingClusterLabels {{ "}}" }} 
                                  {{ "{{-" }} range $label, $labelValue := $labels {{ "}}" }}
                                    {{ "{{-" }} if not (and ($label | hasPrefix "{{ $.Values.autoshiftLabelPrefix }}") (eq $labelValue "_")) {{ "}}" }}
                                      {{ "{{-" }} $label {{ "}}" }}: {{ "{{" }} $labelValue {{ "}}" }}
                                      {{ "{{-" }} $_ := set $newLabels $label $labelValue {{ "}}" }}
                                    {{ "{{-" }} end {{ "}}" }}
                                  {{ "{{-" }} end {{ "}}" }}
                                  {{ "{{-" }} $metadata := set $value.metadata "labels" $newLabels {{ "}}" }}
                                  {{ "{{-" }} $objectDefinition := set $value "metadata" $metadata {{ "}}" }}
                                  {{ "{{-" }} $_ := unset $objectDefinition "status" {{ "}}" }}
                                {
                                  "complianceType": "mustonlyhave",
                                  "objectDefinition": {{ "{{" }} $objectDefinition | toRawJson  {{ "}}" }}
                                }{{ "{{" }} if ne $lastIndex $index {{ "}}" }},{{ "{{" }} end {{ "}}" }}
                                {{ "{{" }} end {{ "}}" }}
                              ]
*/}}